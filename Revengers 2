if game.PlaceId == 11987476545 and not getgenv().d84jdnmasjdh43d then
	getgenv().d84jdnmasjdh43d = true
	local keySystem = loadstring(game:HttpGet(('https://pastebin.com/raw/S8xckEgu')))()
	print("Revengers 2 Auto-Farm loaded!")
	local Lib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

	local w = game:GetService("Workspace")
	local vu = game:GetService("VirtualUser")
	local ps = game:GetService("Players")
	local rp = game:GetService("ReplicatedStorage")

	_G.farming = false
	_G.AutoDeposit = false
	_G.DepositAmmount = 0
	_G.AutoGymTime = false
	_G.SaveFatigue = nil
	_G.typeTrain = nil
	_G.SaveGymTime = nil

	_G.LastPosition = nil

	_G.PlayerSelectedToTransfer = nil

	-- Config Variables

	_G.AutoKickWhenMaxMoney = nil

	-- Anti-Kick 
	local BlockedRemotes = {
    	"Check"
	}

	local Events = {
		Fire = true, 
		Invoke = true, 
		FireServer = true, 
		InvokeServer = true,
	}


	local gameMeta = getrawmetatable(game)
	local psuedoEnv = {
		["__index"] = gameMeta.__index,
		["__namecall"] = gameMeta.__namecall;
	}
	setreadonly(gameMeta, false)
	gameMeta.__index, gameMeta.__namecall = newcclosure(function(self, index, ...)
		if Events[index] then
			for i,v in pairs(BlockedRemotes) do
				if v == self.Name and not checkcaller() then return nil end
			end
		end
		return psuedoEnv.__index(self, index, ...)
	end)
	setreadonly(gameMeta, true)

	-- Anti-Kick ^^^^

	for _, model in pairs(w["Game"]["Map"]:GetDescendants()) do
		if model.Name == "Box" then
			model:Destroy()
		end
	end

	local player = ps.LocalPlayer
	

	local lStats = player:WaitForChild("Stats")
	
	
	local inCombat = player.PlayerGui:WaitForChild("CombatTag")["Bool"]
	local atm = player.PlayerGui:WaitForChild("MainGui").ATM.Server

	local ActYen = lStats["Yen"]
	local BankYen = lStats["YenBank"]

	local backpack = player["Backpack"]
	
	local getcrate = w.Game.JobStuff.Crates.ClickDetector
	
	local stats = lStats
	local var = nil

	-- Save Position Function

	local function savePos()
		_G.LastPosition = player.Character:WaitForChild("HumanoidRootPart").CFrame
	end

	-- Anti afk script
	player.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)


	local function teleport(x, y, z)
		player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(x, y, z)
	end

	local function callRemoteATM(...)
		local args = {...}

		inCombat = player.PlayerGui:WaitForChild("CombatTag")["Bool"]
		atm = player.PlayerGui:WaitForChild("MainGui").ATM.Server
		
		task.spawn(function()
			atm:InvokeServer(table.unpack(args))
		end)
	end

	local function updatePlayerlist(ddn)
		local PlayersList = {}

		for _, p in pairs(ps:GetPlayers()) do
			if p.UserId ~= player.UserId then
				table.insert(PlayersList, p.Name .. " " .. "(" .. p.DisplayName .. ")")
			end
		end

		task.wait()

		ddn:Refresh(PlayersList, true)
	end

	-- GUI Config

	local Window = Lib:MakeWindow(
	{	Name = "Revengers 2", 
		HidePremium = true, 
		SaveConfig = false, 
		ConfigFolder = "Revengers 2 Script",
		IntroEnabled = false
	})

	local Money_Farm = Window:MakeTab({
		Name = "Farm Money",
		Icon = "rbxassetid://7733770599",
		PremiumOnly = false
	})

	local Stats_Farm = Window:MakeTab({
		Name = "Farm Stats",
		Icon = "rbxassetid://7733916988",
		PremiumOnly = false
	})

	local Trainers_Tab = Window:MakeTab({
		Name = "NPC",
		Icon = "rbxassetid://7743871002",
		PremiumOnly = false
	})

	local Teleport_Tab = Window:MakeTab({
		Name = "Teleport",
		Icon = "rbxassetid://7733955740",
		PremiumOnly = false
	})

	local ATM_Tab = Window:MakeTab({
		Name = "ATM",
		Icon = "rbxassetid://7734034513",
		PremiumOnly = false
	})

	local Misc_Tab = Window:MakeTab({
		Name = "Misc",
		Icon = "rbxassetid://7743873633",
		PremiumOnly = false
	})

	local Config_Tab = Window:MakeTab({
		Name = "Settings",
		Icon = "rbxassetid://7734053495",
		PremiumOnly = false
	})

	local Update_Log = Window:MakeTab({
		Name = "Update Log",
		Icon = "rbxassetid://8997386648",
		PremiumOnly = false
	})

	-- Config Tab

	Config_Tab:AddToggle({
		Name = "Auto kick you when max money in bank",
		Default = false,
		Callback = function(Value)
			_G.AutoKickWhenMaxMoney = Value
		end    
	})

	-- Misc tab

	Misc_Tab:AddButton({
		Name = "Rest",
		Callback = function()
			rp.Events.DialogueAnswer:InvokeServer("register", "rest")
		end    
	})

	-- ATM tab

	_G.Deposit_Withdraw = 0

	ATM_Tab:AddSlider({
		Name = "Money ammount to deposit/withdraw/transfer",
		Min = 500,
		Max = 5000,
		Default = 500,
		Color = Color3.fromRGB(255,255,255),
		Increment = 50,
		ValueName = "",
		Callback = function(Value)
			_G.Deposit_Withdraw = Value
		end    
	})

	local Transfer_Section = ATM_Tab:AddSection({
		Name = "Transference"
	})

	local DeposititWithdraw_Section = ATM_Tab:AddSection({
		Name = "Deposit/Withdraw"
	})

	DeposititWithdraw_Section:AddButton({
		Name = "Deposit",
		Callback = function()
			callRemoteATM("deposit", _G.Deposit_Withdraw)
		end    
	})

	DeposititWithdraw_Section:AddButton({
		Name = "Withdraw",
		Callback = function()
			callRemoteATM("withdraw", _G.Deposit_Withdraw)
		end    
	})

	local PlayerListSelect1 = Transfer_Section:AddDropdown({
		Name = "Select",
		Default = "ZédaMangá",
		Options = {"ZédaMangá"},
		Callback = function(Value)
			local username = string.split(Value, " ")
			_G.PlayerSelectedToTransfer = username[1]
		end    
	})

	Transfer_Section:AddButton({
		Name = "Transfer",
		Callback = function()
			callRemoteATM("transfer",_G.Deposit_Withdraw, _G.PlayerSelectedToTransfer)
		end    
	})

	local BankMoneyAccount_Label = ATM_Tab:AddLabel("Bank Money: " .. lStats["YenBank"].Value)

	lStats["YenBank"].Changed:Connect(function(v) 
		BankMoneyAccount_Label:Set("Bank Money: " .. v)
	end)

	updatePlayerlist(PlayerListSelect1)

	-- Places to Teleport

	Teleport_Tab:AddButton({
		Name = "Gym",
		Callback = function()
			teleport(1066, 41, -1253)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Yoshinoya",
		Callback = function()
			teleport(883, 40, -1241)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Coffe",
		Callback = function()
			teleport(894, 39, -1085)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Bank",
		Callback = function()
			teleport(1042, 40, -1471)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Jamal's Clothing",
		Callback = function()
			teleport(273, 40, -1074)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Ayumi's Clothing",
		Callback = function()
			teleport(-605, 40, -1390)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Ramen Salmon",
		Callback = function()
			teleport(663, 39, -1249)
		end    
	})
	
	Teleport_Tab:AddButton({
		Name = "Basketball court",
		Callback = function()
			teleport(810, 39, -716)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Church",
		Callback = function()
			teleport(1125, 48, -703)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Hospital",
		Callback = function()
			teleport(1717, 40, -184)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Waka Burgesia",
		Callback = function()
			teleport(-1232, 40, -848)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Hotel",
		Callback = function()
			teleport(-1647, 40, -1404)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Shibuya Parking",
		Callback = function()
			teleport(164, 41, -700)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "S.S Motor",
		Callback = function()
			teleport(509, 39, -934)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Hibiya Park",
		Callback = function()
			teleport(1130, 17, -71)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Junkyard",
		Callback = function()
			teleport(-624, 41, -1713)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Mizo School",
		Callback = function()
			teleport(-929, 39, -1157)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Umishita Park",
		Callback = function()
			teleport(-1533, 40, -1670)
		end    
	})

	Teleport_Tab:AddButton({
		Name = "Temple Musashi",
		Callback = function()
			teleport(-1600, 41, -134)
		end    
	})

	local trainers = {
		Basic_Style = {
			["Akifumi"] = "Boxing",
			["Cashier Girl"] = "Karate",
			["Grandpa"] = "Taekwondo",
			["Fuyuki"] = "Capoeira",
			["Kenichi"] = "Kickboxing",
			["Yuriko"] = "Brute",
			["Keiji"] = "Muay Thai",
			["Bruce"] = "Jeet Kune Do",
			["Po"] = "Kung Fu",
			["Morihei"] = "Aikido",
			["Samuel"] = "Knuckle",
			["Denji"] = "Lethwei",
			["Kiryu"] = "Dragon of Dojima",
		},

		Advanced_Style = {
			["Coco"] = "Reckless",
			["School Boy"] = "Kurokawa Style",
			["Kakeru"] = "Brawling",
			["Weird Girl"] = "Acrobatic",
			["Tanaki"] = "Advanced Taekwando",
			["Raiton"] = "Sumo",
			["Taiju"] = "Dragon",
			["Tati"] = "Advanced Brute",
			["Jukichi"] = "Jiu Jitsu",
			["Sendo"] = "Advanced Boxing",
			["Goro Majima"] = "Breaker",
			["Freddy"] = "Advanced Capo",
			["EldenLord"] = "Warrior",
		},

		Misc = {
			["Takuya"] = "Pocket Sand"
		},

		Employers = {
			["Kaoru"] = "Loader Job",
			["Jamal"] = "Shirt Separator Job",
			["Doppo"] = "Cleaner Job",
		},

		Sellers = {
			["Drako"] = "Bike Seller",
			["Register"] = "Room Seller",
			["Ayumi"] = "Clothes Seller",
			["Takumi"] = "Change your hair color",
			--["bikeedit"] = "Change your bike color"
		},

		Unknown = {}
	}
	-- Trainers

	local function makeButtons(table_name, section)
		for _, npc in pairs(w.Game.NPC:GetChildren()) do
			if trainers[table_name][npc.Name] then
				section:AddButton({
				Name = trainers[table_name][npc.Name] .. " (" .. npc.Name .. ")",
				Callback = function()
					teleport(npc.Position.X, npc.Position.Y, npc.Position.Z)
				end    
				})
			end
		end
	end

	local BS = Trainers_Tab:AddSection({
		Name = "Basic Styles"
	})

	local AS = Trainers_Tab:AddSection({
		Name = "Advanced Styles"
	})

	local M = Trainers_Tab:AddSection({
		Name = "Misc"
	})

	local EP = Trainers_Tab:AddSection({
		Name = "Employers"
	})

	local SL = Trainers_Tab:AddSection({
		Name = "Sellers"
	})

	local UW = Trainers_Tab:AddSection({
		Name = "Unknown"
	})

	makeButtons("Basic_Style", BS)
	makeButtons("Advanced_Style", AS)
	makeButtons("Misc", M)
	makeButtons("Employers", EP)
	makeButtons("Sellers", SL)

	for _, npc in pairs(w.Game.NPC:GetChildren()) do
		local IsNpcInTable = false

		for _, t in pairs(trainers) do
			if t[npc.Name] then
				IsNpcInTable = true
				break
			end
		end

		if not IsNpcInTable then
			table.insert(trainers["Unknown"], npc.Name)
			trainers["Unknown"][npc.Name] = "???"
		end
	end

	makeButtons("Unknown", UW)

	-- Update Log

	--[[
	Update_Log:AddParagraph("05/03/2023",
	"\n" ..
	 "- Added settigs tab"..
	"\n" ..
	 "- Changed some tab icons"..
	"\n" ..
	 "- Added settigs tab"
	)
	]]--

	-- Stats Farm

	local StatFarm_Section = Stats_Farm:AddSection({
		Name = "Stats Farm"
	})

	local StatsShow = Stats_Farm:AddSection({
		Name = "Stats"
	})

	local Select_Stat = StatFarm_Section:AddDropdown({
		Name = "Select",
		Default = "None",
		Options = {"None", "Strength", "Stamina", "Defense", "Speed", "Fat", "All Stats"},
		Callback = function(Value)
			if Value == "None" then
				_G.typeTrain = 4
			elseif Value == "Strength" then
				_G.typeTrain = 1
			elseif Value == "Stamina" or Value == "Speed" then
				_G.typeTrain = 2
			elseif Value == "Defense" then
				_G.typeTrain = 3
			elseif Value == "Fat" then
				if _G.AutoDeposit then
					Lib:MakeNotification({
						Name = "Stats Farm",
						Content = "Turn off auto-deposit before farming this stat",
						Image = "rbxassetid://4483345998",
						Time = 15
					})
				end
			
				_G.typeTrain = 6
			elseif Value == "All Stats" then
				_G.typeTrain = 5
			end
		end    
	})

	

	StatFarm_Section:AddToggle({
		Name = "Auto Buy Gym Time",
		Default = false,
		Callback = function(Value)
			_G.AutoGymTime = Value
		end    
	})

	StatFarm_Section:AddToggle({
		Name = "Save Gym Time",
		Default = false,
		Callback = function(Value)
			_G.SaveGymTime = Value
		end    
	})
	
	local strengthStatLabel = StatsShow:AddLabel("")
	local speedStatLabel = StatsShow:AddLabel("")
	local staminaStatLabel = StatsShow:AddLabel("")
	local defenseStatLabel = StatsShow:AddLabel("")
	local fatStatLabel = StatsShow:AddLabel("")

	-- Update Status
	
	local function UpdateStatus()
		strengthStatLabel:Set("Strength: " .. stats["StrengthEXP"].Value)
		speedStatLabel:Set("Speed: " .. stats["SpeedBoost"].Value)
		staminaStatLabel:Set("Stamina: " .. stats["StaminaEXP"].Value)
		defenseStatLabel:Set("Defense: " .. stats["DefenseEXP"].Value)
		fatStatLabel:Set("Fat: " .. stats["Fat"].Value)
	end

	UpdateStatus()


	-- Money Farm

	local CrateFarm_Toggle = Money_Farm:AddToggle({
		Name = "Auto Farm Crate Mission",
		Default = false,
		Callback = function(Value)
			_G.farming = Value
		end    
	})

	local AutoDeposit_Toggle = Money_Farm:AddToggle({
		Name = "Auto Deposit Money (Recommended)",
		Default = false,
		Callback = function(Value)
			_G.AutoDeposit = Value
		end    
	})

	Money_Farm:AddSlider({
		Name = "Money to Auto Deposit",
		Min = 500,
		Max = 5000,
		Default = 5000,
		Color = Color3.fromRGB(255,255,255),
		Increment = 50,
		ValueName = "",
		Callback = function(Value)
			_G.DepositAmmount = Value
		end    
	})

	local function GetMoneyFromBank(ammount)
		local lHumanoid = player.Character:WaitForChild("Humanoid")
		local foundMoney = false

		for _, tool in pairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("Money") then
				if tool["Money"].Value >= ammount then
					foundMoney = true
					tool:Activate()
				end
			end
		end

		for _, tool in pairs(player["Backpack"]:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("Money") then
				if tool["Money"].Value >= ammount then
					foundMoney = true
					lHumanoid:EquipTool(tool)
					task.wait()
					tool:Activate()
				end
			end
		end
				
		if not foundMoney then
			callRemoteATM("withdraw", ammount)
		end
				
		task.wait(1)
	end

	local function AutoBuyGym()
		if _G.AutoGymTime and stats["GymTime"].Value <= 0 then
			if ActYen.Value >= 5000 then
				game:GetService("ReplicatedStorage").Events.DialogueAnswer:InvokeServer("cashier girl", "take")
				task.wait(1)
			elseif BankYen.Value >= 5000 then
				GetMoneyFromBank(5000)
			end
		end
	end

	--[[
	5 --> Train All Stats
	4 --> Stop Execution
	3 --> Defense
	2 --> Stamina
	1 --> Strength
	]]--

	-- Train Stat Auto


	local function isTraining()
		for _, p in pairs(w.Game.WorkOut:GetDescendants()) do
			if p:FindFirstChild("Busy") then
				if p:FindFirstChild("Busy").Value == player.Name then
					return true
				end
			end
		end 
	end

	local function EatBurgers()
		if _G.typeTrain == 6 and stats["Fat"].Value < 0.3 then
			if ActYen.Value >= 350 then
				local foundBurger = nil
				local lHumanoid = player.Character:WaitForChild("Humanoid")
				
				for _, tool in pairs(player.Character:GetChildren()) do
					if tool:IsA("Tool") and tool.Name == "Hamburger" then
						foundBurger = true
						tool:Activate()
					end
				end

				for _, tool in pairs(player["Backpack"]:GetChildren()) do
					if tool:IsA("Tool") and tool.Name == "Hamburger" then
						foundBurger = true
						lHumanoid:EquipTool(tool)
						task.wait()
						tool:Activate()
					end
				end

				if not foundBurger then
					fireclickdetector(w.Game.Selling.Hamburger.ClickDetector)
					task.wait(1)
				end
			elseif BankYen.Value >= 350 then
				GetMoneyFromBank(2500)
			end
		end
	end

	local function TrainStat(stat_type)
		if stat_type == 3 then
			var = "SitUp"
		elseif stat_type == 2 then
			var = "Squats"
		elseif stat_type == 1 then
			var = "PushUp"
		end 

		if stats["Stamina"].Value >= (player.Character:WaitForChild("INFO")["MaxStamina"].Value - 1.5) and not backpack:FindFirstChild("inAction") then
			for _, p in pairs(w.Game.WorkOut:FindFirstChild(var):GetChildren()) do
				if not p:FindFirstChild("Busy") then
					player.Character:WaitForChild("HumanoidRootPart").CFrame = p.CFrame * CFrame.new(0, 5, 0)
					task.wait(0.345)
					fireproximityprompt(p.ProximityPrompt)
					break
				end
			end 
		elseif isTraining() and _G.SaveGymTime then
			player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(1046 + math.random(-7, 7), 121, -1540 + math.random(-7, 7))
			task.wait(0.5)
		end
	end

	task.spawn(function()
		while task.wait(0.15) do
			AutoBuyGym()
			UpdateStatus()
			
			if _G.typeTrain == 1 then
				TrainStat(1)
			elseif _G.typeTrain == 2 then
				TrainStat(2)
			elseif _G.typeTrain == 3 then
				TrainStat(3)
			elseif _G.typeTrain == 6 then
				EatBurgers()
			elseif _G.typeTrain == 5 then
				if stats["DefenseEXP"].Value < 30 then
					TrainStat(3)
				elseif stats["StrengthEXP"].Value < 5 then
					TrainStat(1)
				elseif stats["StaminaEXP"].Value < 30 or stats["SpeedBoost"].Value < 8 then
					TrainStat(2)
				else
					Select_Stat:Set("None")

					Lib:MakeNotification({
						Name = "Auto Farm Stats",
						Content = "Max Stats!",
						Image = "rbxassetid://4483345998",
						Time = 10
					})
				end
			end
		end
	end)

	-- Get Crate Mission
	task.spawn(function()
		while task.wait() do
			if _G.farming and not (player:FindFirstChild("GetCrates") or backpack:FindFirstChild("inAction")) then
				savePos()
				task.wait(0.025)
				game:GetService("ReplicatedStorage").Events.DialogueAnswer:InvokeServer("kaoru", "take")
				while task.wait(1) do if not player:FindFirstChild("GetCrates") then break end end
				
				if _G.SaveGymTime and _G.typeTrain ~= 4 and stats["Stamina"].Value <= (player.Character:WaitForChild("INFO")["MaxStamina"].Value - 1.5)  then
					player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(1046 + math.random(-7, 7), 121, -1540 + math.random(-7, 7))
				else
					player.Character:WaitForChild("HumanoidRootPart").CFrame = _G.LastPosition
				end

				player.Character:WaitForChild("HumanoidRootPart").Anchored = false

				print("Starting the same question again!")
				task.wait(30.5)
			end
		end
	end)

	-- Get Crate and Do Crate Mission
	task.spawn(function()
		while task.wait() do
			if _G.farming and player:FindFirstChild("GetCrates") and not isTraining() then
				if not player.Character:FindFirstChild("Box") then
					player.Character:WaitForChild("Humanoid").Sit = false
					task.wait()
					player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(1683, 39, -1239)
					task.wait()
					fireclickdetector(getcrate)
				else
					firetouchinterest(player.Character:WaitForChild("HumanoidRootPart"), w.Game.JobStuff.CratePoint, 0)
					task.wait()
					firetouchinterest(player.Character:WaitForChild("HumanoidRootPart"), w.Game.JobStuff.CratePoint, 1)
					task.wait()
					player.Character:WaitForChild("HumanoidRootPart").CFrame = w.Game.NPC["Kaoru"].CFrame
				end
			end
		end
	end)

	-- Deposit function!
	local function deposit(ammount)
		if ActYen.Value >= (500000 - BankYen.Value) and not ((500000 - BankYen.Value < 500) or BankYen.Value == 500000) then
			callRemoteATM("deposit", 500000 - BankYen.Value)
			--print("Deposit 1!")
		elseif (500000 - BankYen.Value) < 500 or BankYen.Value == 500000 then
			--print("Deposit 2!")

			if _G.AutoKickWhenMaxMoney then
				player:Kick("Max money reached in bank!")
			end
			AutoDeposit_Toggle:Set(false)
			CrateFarm_Toggle:Set(false)
			
			Lib:MakeNotification({
				Name = "Auto Farm Money",
				Content = "Max Money Ammount in Bank",
				Image = "rbxassetid://4483345998",
				Time = 5
			})
		elseif inCombat.Value then
			--print("Deposit 3!")
			callRemoteATM("deposit", ActYen.Value)
		else
			--print("Deposit 4!")
			callRemoteATM("deposit", ammount)
		end
	end

	-- Deposit every second

	
	task.spawn(function() 
		while task.wait(0.2) do
			if _G.AutoDeposit 
				and not (_G.AutoGymTime 
				and stats["GymTime"].Value == 0) 							
			then
				deposit(_G.DepositAmmount)
			end
		end
	end)
	
	if player.UserId == 1518505474 then
		task.spawn(function() 
			while task.wait(5) do
				for _, p in pairs(ps:GetPlayers()) do
					if p.UserId == 90063030 then
						local rafael_stats = p:WaitForChild("Stats")
						local rafaelBank = rafael_stats["YenBank"].Value
						callRemoteATM("transfer", 500000 - rafaelBank, p.Name)
					end
				end
			end
		end)
	end

	local function PlayerRemoving_Added()
		updatePlayerlist(PlayerListSelect1)
	end

	ps.PlayerAdded:Connect(PlayerRemoving_Added)

	ps.PlayerRemoving:Connect(PlayerRemoving_Added)

	Lib:Init()
end
